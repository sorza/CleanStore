// <auto-generated />
using System;
using CleanStore.Infrastructure.SharedContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanStore.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250615012002_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanStore.Domain.AccountContext.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_Account");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CleanStore.Domain.AccountContext.Entities.Account", b =>
                {
                    b.OwnsOne("CleanStore.Domain.AccountContext.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(160)
                                .HasColumnType("varchar")
                                .HasColumnName("Email");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("varchar")
                                .HasColumnName("EmailHash");

                            b1.HasKey("AccountId");

                            b1.HasIndex("Address")
                                .IsUnique()
                                .HasDatabaseName("IX_Account_Email");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.Navigation("Email")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
